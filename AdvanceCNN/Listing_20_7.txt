# ZCA whitening
from keras.datasets import mnist
from keras.preprocessing.image import ImageDataGenerator
from matplotlib import pyplot as plt

# Load data
(X_train, y_train), (X_test, y_test) = mnist.load_data()

# Reshape to be [samples][height][width][channels]
X_train = X_train.reshape(X_train.shape[0], 28, 28, 1)
X_test = X_test.reshape(X_test.shape[0], 28, 28, 1)

# Convert from int to float
X_train = X_train.astype('float32')
X_test = X_test.astype('float32')

# Normalize the images to range [0, 1]
X_train /= 255.0
X_test /= 255.0

# Define data preparation with ZCA whitening
datagen = ImageDataGenerator(zca_whitening=True)

# Fit parameters from data
datagen.fit(X_train)

# Configure batch size and retrieve one batch of images
for X_batch, y_batch in datagen.flow(X_train, y_train, batch_size=9, shuffle=False):
    # Create a grid of 3x3 images
    for i in range(0, 9):
        plt.subplot(330 + 1 + i)
        plt.imshow(X_batch[i].reshape(28, 28), cmap='gray')
    # Show the plot
    plt.show()
    break
